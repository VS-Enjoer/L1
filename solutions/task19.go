package Solution

import "fmt"

/*
–ó–∞–¥–∞–Ω–∏–µ 19:
–†–∞–∑—Ä–∞–±–æ—Ç–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç –ø–æ–¥–∞–≤–∞–µ–º—É—é –Ω–∞ —Ö–æ–¥ —Å—Ç—Ä–æ–∫—É (–Ω–∞–ø—Ä–∏–º–µ—Ä: ¬´–≥–ª–∞–≤—Ä—ã–±–∞ ‚Äî –∞–±—ã—Ä–≤–∞–ª–≥¬ª).
–°–∏–º–≤–æ–ª—ã –º–æ–≥—É—Ç –±—ã—Ç—å unicode
*/

func NextLvlStrginger(input string) string {
	runeArray := []rune(input) //–∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ —Å–ª–∞–π—Å —Ä—É–Ω –ø–æ–ª—É—á–µ–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É(—Ç.–∫. –º–æ–≥—É—Ç –ø—Ä–∏–ª–µ—Ç–µ—Ç—å —Å–∏–º–≤–æ–ª—ã —é–Ω–∏–∫–æ–¥)

	result := make([]rune, len(runeArray)) //–°–æ–∑–¥–∞–µ–º —Å–ª–∞–π—Å —Ä—É–Ω –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å —É–∂–µ –∏—Ç–æ–≥–æ–≤—ã–π —Å–ª–∞–π—Å

	for i := 0; i < len(result); i++ { //–ü–µ—Ä–µ—Å—Ç–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
		result[i] = runeArray[len(runeArray)-1-i]
	}

	return string(result) //–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ —Å—Ç—Ä–æ–∫—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç—Ä–æ–∫—É
}

func Task19() {
	inputString := "‚òÄ ‚ù§ÊñáüôÇ"

	fmt.Println(NextLvlStrginger(inputString))
}
